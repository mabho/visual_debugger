@import "base/functions";
@import "base/variables";
@import "base/types";
@import "base/icons";
@import "../../fonts/visual-debugger-icons/style.scss";

%instance-selected {
  opacity: 1;
}

%selected-item-wrapper {
  margin-bottom: calc(var(--#{$prefix}controller--gutter) * .75);
}

.visual-debugger {

  // Controller.
  &--controller {
    background-color: var(--#{$prefix}color--white);
    border-radius: 0;
    bottom: 0;
    box-shadow: $shadow--full;
    font-size: $controller--font-size;
    max-width: $controller--max-width;
    min-width: $controller--min-width;
    padding: var(--#{$prefix}controller--gutter);
    position: fixed;
    right: 0;
    top: 0;
    transition:
      right var(--#{$prefix}transition-speed),
      transform var(--#{$prefix}transition-speed);
    z-index: $z-index--controller;

    h1, h2, h3, h4 {
      margin-bottom: calc(var(--#{$prefix}controller--gutter) * .25) !important;
      margin-top: calc(var(--#{$prefix}controller--gutter) .5) !important;
    }

    h3 {
      font-size: $controller--font-size--title;
    }

    input[type="checkbox"] {
      cursor: pointer;
      height: 1.5rem;
      width: 1.5rem;
    }

    label {
      cursor: pointer;
    }

    pre {
      border: solid 1px $color--instance-border;
      margin: 0;
      overflow: hidden;
      padding-left: calc(var(--#{$prefix}controller--gutter) * .5);
      padding-right: calc(var(--#{$prefix}controller--gutter) * .5);
      transition: background-color var(--#{$prefix}transition-speed);

      &:hover {
        background-color: rgba($color--instance-background--hover, $transparency--instance-background--hover);
        box-shadow: $shadow--full;
      }
    }

    // When the controller is deactivated...
    body.visual-debugger--deactivated & {
      &:hover {
        transform: translateX(to-rem(-10px));
      }
    }

    .activation-form {
      background-color: var(--#{$prefix}color--white);
      border-radius: to-rem(8px);
      margin-left: $controller--gutter * -1;
      margin-top: $controller--gutter * -1;
      padding: $controller--gutter * .5;
      transition: background-color var(--#{$prefix}transition-speed), transform var(--#{$prefix}transition-speed);

      // When controller is deactivated.
      body.visual-debugger--deactivated & {
        background-color: var(--#{$prefix}color--white);
        transform: translateX(-45px);
      }

      &-wrapper {
        align-items: center;
        column-gap: calc(var(--#{$prefix}controller--gutter));
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        position: relative;
      }

      // Activation checkbox icon.
      #debuggerActivationCheckbox {
        height: var(--#{$prefix}button--controller-checkbox-height);
        opacity: 0;
        position: absolute;
        width: var(--#{$prefix}button--controller-checkbox-width);

        + .icon-controller-activated,
        ~ .icon-controller-deactivated {
          display: none;
        }

        &:checked + .icon-controller-activated,
        &:not(:checked) ~ .icon-controller-deactivated {
          display: inline-block;
        }

        &:not(:checked) + .icon-controller-activated,
        &:checked + .icon-controller-deactivated {
          display: none;
        }
      }
    }

    // Selected element.
    .selected-element {

      // Info.
      &__info {
        column-gap: var(--#{$prefix}controller--gutter);
        display: flex;
        flex-direction: row;

        &-wrapper {
          @extend %selected-item-wrapper;
        }
      }

      // Suggestions.
      &__suggestions {
        &-wrapper {
          @extend %selected-item-wrapper;
        }

        .suggestion {
          align-items: center;
          column-gap: calc(var(--#{$prefix}controller--gutter) * .25);
          display: flex;
          flex-direction: row;
          margin-bottom: calc(var(--#{$prefix}controller--gutter) * .25);
          margin-top: calc(var(--#{$prefix}controller--gutter) * .25);

          button {
            background-color: transparent;
            border: 0;
            cursor: pointer;
            transition: transform var(--#{$prefix}transition-speed);

            &:hover {
              transform: scale(1.2);
            }
          }
        }
      }

      // Tempalte File Path.
      &__template-file-path {
        .label {
          background-color: var(--#{$prefix}color--light-gray);
          padding: 0 calc(var(--#{$prefix}controller--gutter) * .25);
          white-space: nowrap;
        }
      }
    }
  }

  // Base layer.
  &--base {
    position: absolute;
    top: 0;
    left: 0;
    z-index: 10000;
    // display: none;

    body.visual-debugger--deactivated & {
      display: none;
      pointer-events: none;
    }
  }

  // Instance layer.
  .instance-element {
    background-blend-mode: difference;
    border: solid 1px $color--instance-border;
    position: absolute;
    transition:
      background-color var(--#{$prefix}transition-speed),
      margin var(--#{$prefix}transition-speed),
      width var(--#{$prefix}transition-speed),
      height var(--#{$prefix}transition-speed),
      top var(--#{$prefix}transition-speed),
      left var(--#{$prefix}transition-speed);

    input[type='checkbox'] {
      margin: $controller--gutter * .5;
      pointer-events: none;
      transition: .25s all;
    }

    &:hover {
      box-shadow: $shadow--full;

      input[type='checkbox'] {
        @extend %instance-selected;
      }
    }

    &--checked {
      input[type='checkbox'] {
        @extend %instance-selected;
      }
    }

    &--unchecked {
      input[type='checkbox'] {
        opacity: 0;
      }
    }
  }

  // Click-drag button.
  .click-drag-button {
    background-color: var(--#{$prefix}click-drag-button--background-color);
    border: var(--#{$prefix}click-drag-button--border);
    border-radius: 50%;
    cursor: not-allowed;
    height: var(--#{$prefix}click-drag-button--size);
    left: calc(#{var(--#{$prefix}click-drag-button--size)} * -0.5);
    opacity: 0.5;
    position: absolute;
    top: 50%;
    transform-origin: center center;
    transform: translateY(-50%);
    width: var(--#{$prefix}click-drag-button--size);
    z-index: var(--#{$prefix}z-index--click-drag-button);

    body.visual-debugger--activated & {
      background-color: var(--#{$prefix}click-drag-button--background-color);
      cursor: grab;
      opacity: 1;
      transition: transform var(--#{$prefix}transition-speed);

      &:hover {
        transform: translateY(-50%) scale(1.15);
      }

      &:active {
        background-color: var(--#{$prefix}click-drag-button--background-color--active);
        cursor: grabbing;
      }
    }
  }

  .content-copy-data {
    align-items: center;
    column-gap: calc(var(--#{$prefix}controller--gutter) * .25);
    display: flex;
    flex-direction: row;
    margin-bottom: calc(var(--#{$prefix}controller--gutter) * .25);
    margin-top: calc(var(--#{$prefix}controller--gutter) * .25);

    button {
      background-color: transparent;
      border: 0;
      cursor: pointer;
      transition: transform var(--#{$prefix}transition-speed);

      &:hover {
        transform: scale(1.2);
      }
    }
  }
}
