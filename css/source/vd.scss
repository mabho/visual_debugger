@import "base/functions";
@import "base/variables";
@import "base/types";
@import "base/icons";
@import "base/form";
@import "../../fonts/visual-debugger-icons/style.scss";

%instance-selected {
  opacity: 1;
}

%selected-item-wrapper {
  margin-bottom: calc(var(--#{$prefix}controller--gutter) * .75);
}

.visual-debugger {

  // Controller.
  &--controller {
    background-color: var(--#{$prefix}controller--background-color);
    border-radius: var(--#{$prefix}controller--border-radius);
    bottom: var(--#{$prefix}controller--bottom);
    box-shadow: var(--#{$prefix}controller--box-shadow);
    display: flex;
    flex-direction: var(--#{$prefix}controller--flex-direction);
    font-size: var(--#{$prefix}controller--font-size);
    max-width: var(--#{$prefix}controller--max-width);
    min-width: var(--#{$prefix}controller--min-width);
    padding: var(--#{$prefix}controller--padding);
    position: var(--#{$prefix}controller--position);
    right: var(--#{$prefix}controller--right);
    top: var(--#{$prefix}controller--top);
    transition:
      right var(--#{$prefix}transition-speed),
      transform var(--#{$prefix}transition-speed);
    z-index: var(--#{$prefix}controller--z-index);

    h1, h2, h3, h4 {
      margin-bottom: var(--#{$prefix}h--margin-bottom);
      margin-top: var(--#{$prefix}h--margin-top);
    }

    h3 {
      font-size: var(--#{$prefix}controller--font-size--title);
    }

    label {
      cursor: pointer;
    }

    input {
      background-color: var(--#{$prefix}controller--input--background-color);
      border: var(--#{$prefix}controller--input--border);
      border-radius: var(--#{$prefix}controller--input--border-radius);
      flex: 1;
      font-family: var(--#{$prefix}controller--input--font-family);
      margin: var(--#{$prefix}controller--input--margin);
      overflow: var(--#{$prefix}controller--input--overflow);
      padding: var(--#{$prefix}controller--input--padding);
      transition: background-color var(--#{$prefix}transition-speed);

      &:hover {
        background-color: var(--#{$prefix}controller--input--background-color--hover);
        box-shadow: var(--#{$prefix}shadow--full);
      }

      &:focus {
        border: var(--#{$prefix}controller--input--border--focus);
      }
    }

    // When the controller is deactivated...
    body.visual-debugger--deactivated & {
      &:hover {
        transform: var(--#{$prefix}controller--transform--on-deactivated);
      }
    }

    .activation-form {
      background-color: var(--#{$prefix}controller--activation-form--background-color);
      border-radius: var(--#{$prefix}controller--activation-form--border-radius);
      margin-left: var(--#{$prefix}controller--activation-form--margin-left);
      margin-top: var(--#{$prefix}controller--activation-form--margin-top);
      padding: var(--#{$prefix}controller--activation-form--padding);
      transition:
        background-color var(--#{$prefix}transition-speed),
        transform var(--#{$prefix}transition-speed);

      // When controller is deactivated.
      body.visual-debugger--deactivated & {
        background-color: var(--#{$prefix}controller--activation-form--background-color--on-deactivated);
        transform: var(--#{$prefix}controller--activation-form--transform--on-deactivated);
      }

      &-wrapper {
        align-items: var(--#{$prefix}controller--activation-form-wrapper--align-items);
        column-gap: var(--#{$prefix}controller--activation-form-wrapper--column-gap);
        display: flex;
        flex-direction: var(--#{$prefix}controller--activation-form-wrapper--flex-direction);
        justify-content: var(--#{$prefix}controller--activation-form-wrapper--justify-content);
      }
    }

    .content-auto-scroll {
      background-color: var(--#{$prefix}controller--content-auto-scroll--background-color);
      margin: var(--#{$prefix}controller--content-auto-scroll--margin);
      overflow-y: var(--#{$prefix}controller--content-auto-scroll--overflow-y);
      padding: var(--#{$prefix}controller--content-auto-scroll--padding);
    }

    // Tabbed navigation
    .tabbed-navigation {
      background-color: var(--#{$prefix}tabbed-navigation--background-color);
      padding: var(--#{$prefix}tabbed-navigation--padding);

      &__tab {
        background-color: var(--#{$prefix}tabbed-navigation--tab--background-color);
        border-bottom: var(--#{$prefix}tabbed-navigation--tab--border-bottom);
        border-left: var(--#{$prefix}tabbed-navigation--tab--border-left);
        border-top: var(--#{$prefix}tabbed-navigation--tab--border-top);
        border-right: var(--#{$prefix}tabbed-navigation--tab--border-right);
        border-radius: var(--#{$prefix}tabbed-navigation--tab--border-radius);
        color: var(--#{$prefix}tabbed-navigation--tab--color);
        cursor: var(--#{$prefix}tabbed-navigation--tab--cursor);
        display: inline-block;
        font-size: var(--#{$prefix}tabbed-navigation--tab--font-size);
        font-weight: var(--#{$prefix}tabbed-navigation--tab--font-weight);
        margin-right: var(--#{$prefix}tabbed-navigation--tab--margin-right);
        padding: var(--#{$prefix}tabbed-navigation--tab--padding);
        transition: background-color var(--#{$prefix}transition-speed), transform var(--#{$prefix}transition-speed);
        
        &:hover {
          background-color: var(--#{$prefix}tabbed-navigation--tab--background-color--hover);
        }
        
        &.active {
          background-color: var(--#{$prefix}tabbed-navigation--tab--background-color--active);
          color: var(--#{$prefix}tabbed-navigation--tab--color--active);
          font-weight: var(--#{$prefix}tabbed-navigation--tab--font-weight--active);
          position: relative;
          transform: var(--#{$prefix}tabbed-navigation--tab--transform--active);
          z-index: var(--#{$prefix}tabbed-navigation--tab--z-index--active);
        }

        &:not(.active) {
          transform: var(--#{$prefix}tabbed-navigation--tab--transform--not-active);
        }
      }
    }

    // Target for tabbed navigation.
    .nav-target {
      border-top: var(--#{$prefix}nav-target--border-top);
      display: none;
      position: relative;
      z-index: var(--#{$prefix}nav-target--z-index);

      &.active {
        display: block;
      }
    }

    // Active element.
    .active-element {
      margin: var(--#{$prefix}active-element--margin);
      padding: var(--#{$prefix}active-element--padding);

      // Info.
      &__info {
        column-gap: var(--#{$prefix}active-element--info--column-gap);
        display: flex;
        flex-direction: var(--#{$prefix}active-element--info--flex-direction);
      }
    }

    // Selected element.
    .selected-element {
      background-color: var(--#{$prefix}selected-element--background-color);
      padding: var(--#{$prefix}selected-element--padding);

      // Info.
      &__info {
        column-gap: var(--#{$prefix}selected-element--info--column-gap);
        display: flex;
        flex-direction: var(--#{$prefix}selected-element--info--flex-direction);

        &-wrapper {
          @extend %selected-item-wrapper;
        }
      }

      // Suggestions.
      &__suggestions {
        &-wrapper {
          @extend %selected-item-wrapper;
        }
      }

      // Tempalte File Path.
      &__template-file-path {
        .label {
          background-color: var(--#{$prefix}color--light-gray);
          padding: 0 calc(var(--#{$prefix}controller--gutter) * .25);
          white-space: nowrap;
        }
      }
    }

    .list {
      background-color: var(--#{$prefix}list-element--background-color);
      padding: var(--#{$prefix}list-element--padding);

      &__content {
        display: flex;
        flex-direction: var(--#{$prefix}list-element--content--flex-direction);
        gap: var(--#{$prefix}list-element--content--gap);
      }

      &-item {
        display: flex;
        gap: var(--#{$prefix}list-element--list-item--gap);
        flex-direction: var(--#{$prefix}list-element--list-item--flex-direction);
        align-items: center;
        justify-content: flex-start;

        &__content {
          align-items: var(--#{$prefix}list-element--list-item--content--align-items);
          cursor: pointer;
          display: flex;
          flex-direction: var(--#{$prefix}list-element--list-item--content--flex-direction);
          gap: var(--#{$prefix}list-element--list-item--content--gap);
        }
      }
    }
  }

  // Base layer.
  &--base {
    left: var(--#{$prefix}base--left);
    position: var(--#{$prefix}base--position);
    top: var(--#{$prefix}base--top);
    z-index: var(--#{$prefix}base--z-index);

    body.visual-debugger--deactivated & {
      display: var(--#{$prefix}base--display--on-deactivated);
      pointer-events: var(--#{$prefix}base--pointer-events--on-deactivated);
    }
  }

  // Instance layer.
  .instance-element {
    background-blend-mode: var(--#{$prefix}instance--background-blend-mode);
    border: var(--#{$prefix}instance--border);
    position: var(--#{$prefix}instance--position);
    transition:
      background-color var(--#{$prefix}transition-speed),
      margin var(--#{$prefix}transition-speed),
      width var(--#{$prefix}transition-speed),
      height var(--#{$prefix}transition-speed),
      top var(--#{$prefix}transition-speed),
      left var(--#{$prefix}transition-speed);

    input.checkbox-toggle {
      pointer-events: none;
      opacity: 0;
    }

    &:hover {
      box-shadow: var(--#{$prefix}shadow--full);

      .span-toggle {
        @extend %instance-selected;
      }
    }

    .span-toggle {
      margin: calc(var(--#{$prefix}controller--gutter) * .25) calc(var(--#{$prefix}controller--gutter) * .125);
      transition: opacity var(--#{$prefix}transition-speed);
    }

    &--checked {
      input[type='checkbox'] {
        @extend %instance-selected;
      }
    }

    &--unchecked {
      .span-toggle {
        opacity: 0;
      }
    }
  }

  // Click-drag button.
  .click-drag-button {
    background-color: var(--#{$prefix}click-drag-button--background-color);
    border: var(--#{$prefix}click-drag-button--border);
    border-radius: var(--#{$prefix}click-drag-button--border-radius);
    cursor: var(--#{$prefix}click-drag-button--cursor);
    height: var(--#{$prefix}click-drag-button--size);
    left: calc(#{var(--#{$prefix}click-drag-button--size)} * -0.5);
    opacity: var(--#{$prefix}click-drag-button--opacity);
    position: absolute;
    top: var(--#{$prefix}click-drag-button--top);
    transform-origin: var(--#{$prefix}click-drag-button--transform-origin);
    transform: var(--#{$prefix}click-drag-button--transform);
    transition:
      background-color var(--#{$prefix}transition-speed),
      transform var(--#{$prefix}transition-speed);
    width: var(--#{$prefix}click-drag-button--size);
    z-index: var(--#{$prefix}click-drag-button--z-index);

    body.visual-debugger--activated & {
      background-color: var(--#{$prefix}click-drag-button--background-color--on-activated);
      cursor: var(--#{$prefix}click-drag-button--cursor--on-activated);
      opacity: var(--#{$prefix}click-drag-button--opacity--on-activated);

      &:hover {
        transform: var(--#{$prefix}click-drag-button--transform--on-activated--hover);
      }

      &:active {
        background-color: var(--#{$prefix}click-drag-button--background-color--on-activated--active);
        cursor: var(--#{$prefix}click-drag-button--cursor--on-activated--active);
      }
    }
  }

  // The content copy component.
  .content-copy-data {
    align-items: var(--#{$prefix}content-copy-data--align-items);
    column-gap: var(--#{$prefix}content-copy-data--column-gap);
    display: flex;
    flex-direction: var(--#{$prefix}content-copy-data--flex-direction);
    margin: var(--#{$prefix}content-copy-data--margin);

    button {
      background-color: var(--#{$prefix}content-copy-data--button--background-color);
      border: var(--#{$prefix}content-copy-data--button--border);
      cursor: pointer;
      transition: transform var(--#{$prefix}transition-speed);

      &:hover {
        transform: var(--#{$prefix}content-copy-data--button--transform--hover);
      }
    }
  }
}
